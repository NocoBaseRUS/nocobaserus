name: Aliyun Container Registry

on:
  push:
    branches:
      - 'main'
      - 'develop'
    paths:
      - 'packages/**'
      - 'docker/nocobase/**'
      - 'Dockerfile.acr'
      - '.github/workflows/aliyun-container-registry.yml'
  pull_request:
    branches:
      - '**'
    paths:
      - 'packages/**'
      - 'docker/nocobase/**'
      - 'Dockerfile.acr'
      - '.github/workflows/aliyun-container-registry.yml'

jobs:
  push-acr:
    if: github.event.pull_request.head.repo.fork != true
    runs-on: ubuntu-latest
    services:
      verdaccio:
        image: verdaccio/verdaccio
        ports:
          - 4873:4873
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SUBMODULE_SSH_KEY }}
          submodules: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            nocobase/nocobase
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ALI_DOCKER_REGISTRY }}
          username: ${{ secrets.ALI_DOCKER_USERNAME }}
          password: ${{ secrets.ALI_DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.acr
          build-args: |
            VERDACCIO_URL=http://localhost:4873/
            COMMIT_HASH=${GITHUB_SHA}
          push: true
          tags: ${{ secrets.ALI_DOCKER_REGISTRY }}/${{ steps.meta.outputs.tags }}
      - name: Deploy NocoBase
        env:
          IMAGE_TAG: ${{ steps.meta.outputs.tags }}
        run: |
          echo $IMAGE_TAG
          export APP_NAME=$(echo $IMAGE_TAG | cut -d ":" -f 2)
          echo $APP_NAME
          curl --location --request POST "${{secrets.NOCOBASE_DEPLOY_HOST}}$APP_NAME" \
            --header 'Content-Type: application/json' \
            -d "{
                \"tag\": \"$APP_NAME\",
                \"dialect\": \"postgres\"
            }"
